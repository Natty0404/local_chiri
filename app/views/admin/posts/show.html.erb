<div class="container ml-2">
  <div class="row">
    <div class="mx-auto col-lg-6">
      <h4 class="mt-4"><strong>聖地詳細</strong></h4><br>
       <div class="mx-auto col-8">
         <div class="mx-auto mb-3">
           <%= image_tag @post.get_post_image(400,400) %>
         </div>
         <div class="mx-auto mb-3">
           <p><strong>投稿者</strong>　　　<%= link_to @post.user.name, admin_user_path(@user.id) %></p>
         </div>
         <div class="mx-auto mb-3">
           <p><strong>聖地名</strong>　　　<%= @post.title %></p>
         </div>
         <div class="mx-auto mb-3">
           <p><strong>聖地説明</strong>　　<%= @post.body %></p>
         </div>
          <div class="mx-auto mb-4">
           <p><strong>住所</strong>　　　　<%= @post.address %></p>
         </div>
         <div class="mx-auto mb-4">
           <p><strong>お気に入り</strong>　<%= @post.favorites.count %></p>
         </div>
          <div class="row">
            <div class="col">
              <%= link_to "削除", admin_post_path(@post), method: :delete, data: { confirm: "本当に削除しますか？" }, class:"btn btn-outline-danger btn-block" %>
            </div>
          </div>
       </div>
    </div>
    <div class="mx-auto col-lg-3">
      <div class="mx-auto mt-5">
       <span><strong>コメント</strong></span>　<%= @post.post_comments.count %><br><br>
       <div class="comments-index">
         <%= render "admin/post_comments/index", post_comments: @post_comments, user: @user %>
       </div>
      </div>
      <%= paginate @post_comments %>
    </div>
    <div class="col-lg-3 mt-4 mb-4">
      <div id="map" style="width: 610px; height: 750px;"></div>
        <script>
          let map

          const display = document.getElementById('display')

          // mapの表示関数
          function initMap() {
              geocoder = new google.maps.Geocoder()

              // mapの初期位置, 縮尺を定義
              map = new google.maps.Map(document.getElementById('map'), {
                  center: {lat: <%= @post.latitude %>, lng: <%= @post.longitude %>},
                  zoom: 12,
              });

              // mapsテーブルにあるそれぞれのレコードをmap上に表示

                  (function(){
                  var contentString = "住所：<%= @post.address %>";

                  // マーカーを立てる
                  var marker = new google.maps.Marker({
                      position:{lat: <%= @post.latitude %>, lng: <%= @post.longitude %>},
                      map: map,
                      title: contentString
                  });

                  // 情報ウィンドウ(吹き出し)の定義
                  // 投稿の詳細ページへのリンクも
                  var infowindow = new google.maps.InfoWindow({
                  position: {lat: <%= @post.latitude %>, lng: <%= @post.longitude %>},
                  content: "<a href='<%= post_path(@post.id) %>' target='_blank'><%= @post.title %><br><%= @post.body %></a>"
                  });

                  // クリックしたときに情報ウィンドウを表示
                  marker.addListener('click', function() {
                  infowindow.open(map, marker);
                  });

                  })();

          }

          let geocoder

          // 地図検索関数
          function codeAddress() {
              let inputAddress = document.getElementById('address').value;

              geocoder.geocode({
                  'address': inputAddress
              }, function (results, status) {
                  if (status == 'OK') {
                      map.setCenter(results[0].geometry.location);
                      var marker = new google.maps.Marker({
                          map: map,
                          position: results[0].geometry.location
                      });

                  display.textContent = "検索結果：" + results[ 0 ].geometry.location
                  } else {
                      alert('該当する結果がありませんでした：' + status);
                  }
              });
          }
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['SECRET_KEY']%>&callback=initMap"></script>
      </div>
  </div>
</div>
